/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.nsu.peyuaa;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

class GraphTest {

    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
    private final PrintStream originalOut = System.out;
    private final PrintStream originalErr = System.err;

    @Test
    void adjacencyMatrixLoadTest() throws IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadAdjacencyMatrix("./src/test/resources/adjacencyMatrixTest.txt");
        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(Files.readString(Paths.get("./src/test/resources/expected/adjacencyMatrix.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    void incidenceMatrixLoadTest() throws IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadIncidenceMatrix("./src/test/resources/incidenceMatrixTest.txt");
        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(Files.readString(Paths.get("./src/test/resources/expected/incidenceMatrix.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    void adjacencyListLoadTest() throws  IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadAdjacencyList("./src/test/resources/adjacencyListTest.txt");
        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(Files.readString(Paths.get("./src/test/resources/expected/adjacencyList.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    void changeWeight() throws IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadAdjacencyMatrix("./src/test/resources/adjacencyMatrixTest.txt");

        List<Graph.Edge<String>> edges = graph.getVertexEdges("A");

        for (Graph.Edge<String> edge : edges) {
            graph.changeWeight(edge, 7);
        }

        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(Files.readString(Paths.get("./src/test/resources/expected/changeWeight.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    void changeVertexValue() throws IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadAdjacencyMatrix("./src/test/resources/adjacencyMatrixTest.txt");

        graph.changeValue(graph.getVertex("A"), "Z");

        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(Files.readString(Paths.get("./src/test/resources/expected/changeVertexValue.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    @Test
    void changeVertexValue2() throws IOException {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));

        Graph<String> graph = new Graph<>();
        graph.loadAdjacencyMatrix("./src/test/resources/adjacencyMatrixTest.txt");

        graph.changeValue(graph.getVertex("B"), "N");

        graph.printAdjacencyMatrix();
        graph.printIncidenceMatrix();
        graph.printAdjacencyList();

        Assertions.assertEquals(
                Files.readString(Paths.get("./src/test/resources/expected/changeVertexValue2.txt")),
                outContent.toString());

        System.setOut(originalOut);
        System.setErr(originalErr);
    }
}
