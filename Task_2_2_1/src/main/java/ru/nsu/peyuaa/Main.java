/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package ru.nsu.peyuaa;

import com.google.gson.Gson;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.io.FileUtils;

/**
 * This class represents the entry point of the pizza delivery simulation program.
 * It reads the configuration file and creates the necessary objects to run the simulation.
 * It starts the threads for the customers and the pizzeria,
 * which in turn start the threads for the couriers, bakers, and warehouse.
 */
public class Main {
    private static final String CONFIG_PATH = "./src/main/resources/config.json";

    /**
     * The main method of the application.
     * Parses the configuration file, creates and starts the necessary threads, and starts the simulation.
     *
     * @param args The command-line arguments, which are not used in this application.
     * @throws IOException If an I/O error occurs while reading the configuration file.
     */
    public static void main(String[] args) throws IOException {
        Gson g = new Gson();
        String json = FileUtils.readFileToString(new File(CONFIG_PATH), StandardCharsets.UTF_8);
        Config config = g.fromJson(json, Config.class);

        List<Baker> bakers = new ArrayList<>();
        List<Courier> couriers = new ArrayList<>();
        List<Customer> customers = new ArrayList<>();

        Warehouse warehouse = new Warehouse(config.warehouseSize);
        Pizzeria pizzeria = new Pizzeria(warehouse);

        for (int i = 0; i < config.bakersNum; i++) {
            bakers.add(new Baker(pizzeria));
        }
        for (int i = 0; i < config.couriersNum; i++) {
            couriers.add(new Courier(2, warehouse));
        }

        pizzeria.setCouriers(couriers);
        pizzeria.setBakers(bakers);

        for (int i = 0; i < config.customersNum; i++) {
            customers.add(new Customer(pizzeria));
        }

        for (Customer customer : customers) {
            customer.start();
        }

        pizzeria.start();
    }
}
