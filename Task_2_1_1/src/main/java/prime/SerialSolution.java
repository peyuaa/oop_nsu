/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package prime;

import java.util.Arrays;
import java.util.stream.IntStream;

public class SerialSolution {
    public boolean containsNonPrime(int[] arr) {
        int max = Arrays.stream(arr).max().getAsInt();

        if (max < 2) {
            return true;
        }

        boolean[] isPrime = new boolean[max + 1];
        Arrays.fill(isPrime, true);
        isPrime[0] = isPrime[1] = false;

        IntStream.rangeClosed(2, (int) Math.sqrt(max))
                .filter(x -> isPrime[x])
                .forEach(x -> IntStream.rangeClosed(x * x, max)
                        .filter(y -> y % x == 0)
                        .forEach(y -> isPrime[y] = false));

        return Arrays.stream(arr).anyMatch(x -> !isPrime[x]);
    }

    public SerialSolution() {

    }
}
